{"version":3,"sources":["Components/heading.jsx","Components/Figure.jsx","Components/Word.jsx","Components/WrongLetters.jsx","helpers/helpers.js","Components/PopUp.jsx","Components/Notification.jsx","App.js","serviceWorker.js","index.js"],"names":["Heading","className","Figure","height","width","x1","y1","x2","y2","cx","cy","r","Word","selectedWord","correctLetters","split","map","letter","i","key","includes","WrongLetters","wrongLetters","lenghth","reduce","prev","curr","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","length","PopUp","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeyDown","e","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c26da65b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Heading() {\r\n    return (\r\n        <div>\r\n            <h1 className='heading'>Hangman</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n","import React from \"react\";\r\n\r\nfunction Figure() {\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n      {/* head */}\r\n      <circle cx=\"140\" cy=\"70\" r=\"20\" />\r\n      {/* body */}\r\n      <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\r\n      {/* arms */}\r\n      <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\r\n      <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\r\n      {/* legs */}\r\n      <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\r\n      <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Figure;\r\n","import React from \"react\";\r\n\r\nfunction Word({ selectedWord, correctLetters }) {\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split(\"\").map((letter, i) => {\r\n        return (\r\n          <spam className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : \"\"}\r\n          </spam>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Word;\r\n","import React from \"react\";\r\n\r\nfunction WrongLetters({ wrongLetters }) {\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n        {wrongLetters.lenghth > 0 && <p>Wrong</p>}\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, \" ,\", curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WrongLetters;\r\n","export function showNotification(setter) {\r\n    setter(true);\r\n    setTimeout(() => {\r\n        setter(false);\r\n    },2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n    let status = 'win';\r\n    \r\n    //check win\r\n    word.split('').forEach(letter => {\r\n        if (!correct.includes(letter)) {\r\n            status = '';\r\n        } \r\n    })\r\n\r\n    // check lose\r\n    if(wrong.length === 6) status = 'lose';\r\n\r\n    return status\r\n}","import React, { useEffect } from \"react\";\r\nimport { checkWin } from \"../helpers/helpers\";\r\n\r\nfunction PopUp({\r\n  correctLetters,\r\n  wrongLetters,\r\n  selectedWord,\r\n  setPlayable,\r\n  playAgain,\r\n}) {\r\n  let finalMessage = \"\";\r\n  let finalMessageRevealWord = \"\";\r\n  let playable = true;\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === \"win\") {\r\n    finalMessage = \"Congratulations! You Won! :)\";\r\n    playable = false;\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === \"lose\") {\r\n    finalMessage = \"Unfortunately you lost\";\r\n    finalMessageRevealWord = `....the word is ${selectedWord}`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"popup-container\"\r\n        style={finalMessage !== \"\" ? { display: \"flex\" } : {}}\r\n      >\r\n        <div className=\"popup\">\r\n          <h2>{finalMessage}</h2>\r\n          <h3>{finalMessageRevealWord}</h3>\r\n          <button onClick={playAgain}>Play Again</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PopUp;\r\n","import React from 'react'\r\n\r\nfunction Notification( {showNotification}) {\r\n    return (\r\n        <div className={`notification-container ${showNotification ? 'show' : ''} `}>\r\n            <p>You have already entered this letter.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Heading from \"./Components/heading\";\nimport Figure from \"./Components/Figure\";\nimport Word from \"./Components/Word\";\nimport WrongLetters from \"./Components/WrongLetters\";\nimport PopUp from './Components/PopUp'\nimport Notification from './Components/Notification'\nimport { showNotification as show, checkWin} from './helpers/helpers'\n\nconst words = [\"application\", \"programming\", \"interface\", \"wizard\"];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const { key, keyCode } = e;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification)\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification)\n          }\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  const playAgain = () => {\n    setPlayable(true)\n\n    //Empty Array\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length)\n    selectedWord = words[random]\n  }\n\n  return (\n    <>\n      <Heading />\n      <div className=\"game-container\">\n        <Figure />\n        <WrongLetters selectedWord={selectedWord} wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <PopUp correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}